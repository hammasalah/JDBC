This file is a merged representation of the entire codebase, combined into a single document.
Generated by Repomix on: 2025-02-08T23:30:30.205Z

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded

Additional Info:
----------------

================================================================
Directory Structure
================================================================
main/java/com/example/pifx/DatabaseConnection.java
main/java/com/example/pifx/HelloApplication.java
main/java/com/example/pifx/HelloController.java
main/java/com/example/pifx/JustView.java
main/java/com/example/pifx/RegisterController.java
main/java/com/example/pifx/style.css
main/java/com/example/pifx/User.java
main/java/com/example/pifx/UsersController.java
main/java/module-info.java
main/resources/com/example/pifx/hello-view.fxml
main/resources/com/example/pifx/just_view.fxml
main/resources/com/example/pifx/register.fxml
main/resources/com/example/pifx/users-view.fxml

================================================================
Files
================================================================

================
File: main/java/com/example/pifx/DatabaseConnection.java
================
package com.example.pifx;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;

public class DatabaseConnection {
    private static final String URL = "jdbc:mysql://localhost:3306/users_db";
    private static final String USER = "root"; // Default XAMPP username
    private static final String PASSWORD = ""; // Leave empty if no password

    static {
        try {
            // Explicitly load the MySQL driver
            Class.forName("com.mysql.cj.jdbc.Driver");
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
            throw new RuntimeException("MySQL JDBC Driver not found", e);
        }
    }

    public static Connection getConnection() throws SQLException {
        return DriverManager.getConnection(URL, USER, PASSWORD);
    }
}

================
File: main/java/com/example/pifx/HelloApplication.java
================
package com.example.pifx;

import javafx.application.Application;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.stage.Stage;

public class HelloApplication extends Application {
    @Override
    public void start(Stage stage) {
        try {
            // Corrected FXML path
            FXMLLoader loader = new FXMLLoader(getClass().getResource("/com/example/pifx/just_view.fxml"));
            Parent root = loader.load();

            Scene scene = new Scene(root, 800, 600);
            stage.setTitle("User Management System");
            stage.setScene(scene);
            stage.show();

        } catch (Exception e) {
            System.err.println("Error loading FXML file:");
            e.printStackTrace();
        }
    }

    public static void main(String[] args) {
        launch();
    }
}

================
File: main/java/com/example/pifx/HelloController.java
================
package com.example.pifx;

import javafx.fxml.FXML;
import javafx.scene.control.Label;

public class HelloController {
    @FXML
    private Label welcomeText;

    @FXML
    protected void onLoginButtonClick() {
        welcomeText.setText("Welcome to JavaFX Application!");
    }
}

================
File: main/java/com/example/pifx/JustView.java
================
package com.example.pifx;

import javafx.beans.property.SimpleStringProperty;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.*;
import javafx.scene.control.cell.PropertyValueFactory;
import java.net.URL;
import java.sql.*;
import java.util.ResourceBundle;

public class JustView implements Initializable {
    @FXML private TableView<User> userTable;
    @FXML private TableColumn<User, Integer> idColumn;
    @FXML private TableColumn<User, String> nameColumn;
    @FXML private TableColumn<User, String> emailColumn;
    @FXML private TableColumn<User, String> roleColumn;
    @FXML private TableColumn<User, String> statusColumn;

    @FXML private TextField searchField;
    @FXML private TextField nameField;
    @FXML private TextField emailField;
    @FXML private ComboBox<String> roleComboBox;
    @FXML private ComboBox<String> statusComboBox;
    @FXML private Label statusLabel;

    private ObservableList<User> userList = FXCollections.observableArrayList();

    @Override
    public void initialize(URL url, ResourceBundle rb) {
        configureTableColumns();
        initializeComboBoxes();
        loadUsers();
        setupTableSelectionListener();
    }

    private void setupTableSelectionListener() {
    }

    private void configureTableColumns() {
        idColumn.setCellValueFactory(new PropertyValueFactory<>("id"));
        nameColumn.setCellValueFactory(cellData ->
                new SimpleStringProperty(cellData.getValue().getFirstName() + " " + cellData.getValue().getLastName()));
        emailColumn.setCellValueFactory(new PropertyValueFactory<>("email"));
        roleColumn.setCellValueFactory(new PropertyValueFactory<>("role"));
        statusColumn.setCellValueFactory(new PropertyValueFactory<>("status"));
    }

    private void initializeComboBoxes() {
        roleComboBox.setItems(FXCollections.observableArrayList("Admin", "User", "Manager"));
        statusComboBox.setItems(FXCollections.observableArrayList("Active", "Inactive", "Pending"));
    }

    private void loadUsers() {
        userList.clear();
        String query = "SELECT * FROM users";

        if (!searchField.getText().isEmpty()) {
            query += " WHERE first_name LIKE ? OR last_name LIKE ? OR email LIKE ?";
        }

        try (Connection conn = DatabaseConnection.getConnection();
             PreparedStatement pstmt = conn.prepareStatement(query)) {

            if (!searchField.getText().isEmpty()) {
                String searchTerm = STR."%\{searchField.getText()}%";
                pstmt.setString(1, searchTerm);
                pstmt.setString(2, searchTerm);
                pstmt.setString(3, searchTerm);
            }

            ResultSet rs = pstmt.executeQuery();
            while (rs.next()) {
                userList.add(new User(
                        rs.getInt("id"),
                        rs.getString("first_name"),
                        rs.getString("last_name"),
                        rs.getString("email"),
                        rs.getString("role")
                ));
            }
            userTable.setItems(userList);
        } catch (SQLException e) {
            showStatus(STR."Error loading users: \{e.getMessage()}", true);
        }
    }

    @FXML
    private void handleSearch() {
        loadUsers();
    }

    @FXML
    private void addUser() {
        if (!validateInput()) return;

        String[] names = nameField.getText().split(" ", 2);
        String firstName = names[0];
        String lastName = names.length > 1 ? names[1] : "";

        String sql = "INSERT INTO users (first_name, last_name, email, role, status) VALUES (?, ?, ?, ?, ?)";
        try (Connection conn = DatabaseConnection.getConnection();
             PreparedStatement pstmt = conn.prepareStatement(sql)) {

            pstmt.setString(1, firstName);
            pstmt.setString(2, lastName);
            pstmt.setString(3, emailField.getText());
            pstmt.setString(4, roleComboBox.getValue());
            pstmt.setString(5, statusComboBox.getValue());

            pstmt.executeUpdate();
            showStatus("User added successfully!", false);
            loadUsers();
            clearForm();
        } catch (SQLException e) {
            showStatus("Error adding user: " + e.getMessage(), true);
        }
    }

    private boolean validateInput() {
        return false;
    }

    private void clearForm() {
    }

    private void showStatus(String s, boolean b) {
    }

    // Keep other methods (updateUser, deleteUser, clearForm) same as previous version
    // with updated SQL queries to use first_name/last_name instead of full_name
}

================
File: main/java/com/example/pifx/RegisterController.java
================
package com.example.pifx;

import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.PasswordField;
import javafx.scene.control.TextField;
import javafx.stage.Stage;

import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;

public class RegisterController {

    @FXML
    private TextField firstName;

    @FXML
    private TextField lastName;

    @FXML
    private TextField age;

    @FXML
    private TextField phoneNumber;

    @FXML
    private TextField email;

    @FXML
    private PasswordField password;

    @FXML
    private void onRegisterButtonClick() {
        if (validateInput()) {
            try {
                Connection conn = DatabaseConnection.getConnection();
                String sql = "INSERT INTO users (first_name, last_name, age, phone_number, email, password) VALUES (?, ?, ?, ?, ?, ?)";

                PreparedStatement pstmt = conn.prepareStatement(sql);
                pstmt.setString(1, firstName.getText());
                pstmt.setString(2, lastName.getText());
                pstmt.setInt(3, Integer.parseInt(age.getText()));
                pstmt.setString(4, phoneNumber.getText());
                pstmt.setString(5, email.getText());
                pstmt.setString(6, password.getText());

                pstmt.executeUpdate();
                showAlert("Success", "User registered successfully!");
                navigateToHelloView();
            } catch (SQLException | NumberFormatException e) {
                e.printStackTrace();
                showAlert("Registration Error", "Failed to register user. Please try again.");
            }
        } else {
            showAlert("Validation Error", "Please fill in all fields correctly.");
        }
    }

    @FXML
    private void onViewUsersClick() {
        try {
            FXMLLoader loader = new FXMLLoader(getClass().getResource("/com/example/pifx/users-view.fxml"));
            Parent root = loader.load();
            Stage stage = (Stage) firstName.getScene().getWindow();
            stage.setScene(new Scene(root));
            stage.setTitle("Registered Users");
            stage.show();
        } catch (IOException e) {
            e.printStackTrace();
            showAlert("Error", "Failed to load Users View.");
        }
    }

    private boolean validateInput() {
        return !firstName.getText().isEmpty() &&
                !lastName.getText().isEmpty() &&
                !age.getText().isEmpty() &&
                !phoneNumber.getText().isEmpty() &&
                !email.getText().isEmpty() &&
                !password.getText().isEmpty();
    }

    private void navigateToHelloView() {
        try {
            FXMLLoader loader = new FXMLLoader(getClass().getResource("/com/example/pifx/hello-view.fxml"));
            Parent root = loader.load();
            Stage stage = (Stage) firstName.getScene().getWindow();
            stage.setScene(new Scene(root));
            stage.setTitle("Welcome");
            stage.show();
        } catch (IOException e) {
            e.printStackTrace();
            showAlert("Error", "Failed to load Hello View.");
        }
    }

    private void showAlert(String title, String message) {
        Alert alert = new Alert(Alert.AlertType.INFORMATION);
        alert.setTitle(title);
        alert.setHeaderText(null);
        alert.setContentText(message);
        alert.showAndWait();
    }
}

================
File: main/java/com/example/pifx/style.css
================
/* Set background color for the whole window */
.root {
    -fx-background-color: #f4f4f4;
}

/* Style for the VBox */
.vbox {
    -fx-alignment: center;
    -fx-spacing: 20px;
    -fx-padding: 20px;
}

/* Style for the header label */
#welcomeText {
    -fx-font-size: 22px;
    -fx-font-weight: bold;
    -fx-text-fill: #008080; /* Teal color */
}

/* Style for the GridPane */
.grid-pane {
    -fx-padding: 20px;
    -fx-background-color: #ffffff;
    -fx-border-color: #ccc;
    -fx-border-width: 1px;
    -fx-border-radius: 10px;
    -fx-background-radius: 10px;
    -fx-effect: dropshadow(three-pass-box, rgba(0, 0, 0, 0.2), 10, 0, 0, 5);
}

/* Style for labels */
.label {
    -fx-font-size: 14px;
    -fx-text-fill: #333;
}

/* Style for text fields */
.text-field, .password-field {
    -fx-pref-width: 250px;
    -fx-padding: 5px;
    -fx-border-color: #008080;
    -fx-border-radius: 5px;
    -fx-background-radius: 5px;
}

/* Style for the login button */
#login {
    -fx-background-color: #008080;
    -fx-text-fill: white;
    -fx-font-size: 14px;
    -fx-font-weight: bold;
    -fx-padding: 10px 20px;
    -fx-border-radius: 5px;
    -fx-background-radius: 5px;
}

#login:hover {
    -fx-background-color: #006666;
}

#login:pressed {
    -fx-background-color: #004d4d;
}
/* Background color */
.root {
    -fx-background-color: #f4f4f4;
}

/* Style for the GridPane */
.grid-pane {
    -fx-padding: 20px;
    -fx-background-color: #ffffff;
    -fx-border-color: #ccc;
    -fx-border-width: 1px;
    -fx-border-radius: 10px;
    -fx-background-radius: 10px;
    -fx-effect: dropshadow(three-pass-box, rgba(0, 0, 0, 0.2), 10, 0, 0, 5);
}

/* Labels */
.label {
    -fx-font-size: 14px;
    -fx-text-fill: #333;
}

/* Text fields */
.text-field, .password-field {
    -fx-pref-width: 250px;
    -fx-padding: 5px;
    -fx-border-color: #008080;
    -fx-border-radius: 5px;
    -fx-background-radius: 5px;
}

/* Register Button */
#registerButton {
    -fx-background-color: #008080;
    -fx-text-fill: white;
    -fx-font-size: 14px;
    -fx-font-weight: bold;
    -fx-padding: 10px 20px;
    -fx-border-radius: 5px;
    -fx-background-radius: 5px;
}

#registerButton:hover {
    -fx-background-color: #006666;
}

#registerButton:pressed {
    -fx-background-color: #004d4d;
}

================
File: main/java/com/example/pifx/User.java
================
package com.example.pifx;

public class User {
    private int id;
    private String firstName;
    private String lastName;
    private String email;
    private String role;
    private String status;

    public User(int id, String firstName, String lastName, String email, String role) {
        this.id = id;
        this.firstName = firstName;
        this.lastName = lastName;
        this.email = email;
        this.role = role;
        this.status = status;
    }

    // Getters
    public int getId() { return id; }
    public String getFirstName() { return firstName; }
    public String getLastName() { return lastName; }
    public String getEmail() { return email; }
    public String getRole() { return role; }
    public String getStatus() { return status; }

    // Setters
    public void setId(int id) { this.id = id; }
    public void setFirstName(String firstName) { this.firstName = firstName; }
    public void setLastName(String lastName) { this.lastName = lastName; }
    public void setEmail(String email) { this.email = email; }
    public void setRole(String role) { this.role = role; }
    public void setStatus(String status) { this.status = status; }
}

================
File: main/java/com/example/pifx/UsersController.java
================
package com.example.pifx;

import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.stage.Stage;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.cell.PropertyValueFactory;

import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

public class UsersController {
    @FXML
    private TableView<User> usersTable;
    @FXML
    private TableColumn<User, Integer> idColumn;
    @FXML
    private TableColumn<User, String> firstNameColumn;
    @FXML
    private TableColumn<User, String> lastNameColumn;
    @FXML
    private TableColumn<User, Integer> ageColumn;
    @FXML
    private TableColumn<User, String> phoneColumn;
    @FXML
    private TableColumn<User, String> emailColumn;

    private final ObservableList<User> userList = FXCollections.observableArrayList();

    @FXML
    public void initialize() {
        idColumn.setCellValueFactory(new PropertyValueFactory<>("id"));
        firstNameColumn.setCellValueFactory(new PropertyValueFactory<>("firstName"));
        lastNameColumn.setCellValueFactory(new PropertyValueFactory<>("lastName"));
        ageColumn.setCellValueFactory(new PropertyValueFactory<>("age"));
        phoneColumn.setCellValueFactory(new PropertyValueFactory<>("phoneNumber"));
        emailColumn.setCellValueFactory(new PropertyValueFactory<>("email"));

        loadUsersFromDatabase();
    }

    private void loadUsersFromDatabase() {
        String sql = "SELECT * FROM users";

        try (Connection conn = DatabaseConnection.getConnection();
             PreparedStatement pstmt = conn.prepareStatement(sql);
             ResultSet rs = pstmt.executeQuery()) {

            while (rs.next()) {
                userList.add(new User(
                        rs.getInt("id"),
                        rs.getString("first_name"),
                        rs.getString("last_name"),
                        //rs.getInt("age"),
                        rs.getString("phone_number"),
                        rs.getString("email")
                ));
            }

            usersTable.setItems(userList);
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    @FXML
    private void onBackButtonClick() {
        try {
            FXMLLoader loader = new FXMLLoader(getClass().getResource("/com/example/pifx/register.fxml"));
            Parent root = loader.load();
            Stage stage = (Stage) usersTable.getScene().getWindow();
            stage.setScene(new Scene(root));
            stage.setTitle("User Registration");
            stage.show();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}

================
File: main/java/module-info.java
================
module com.example.pifx {
    requires javafx.controls;
    requires javafx.fxml;
    requires javafx.web;

    requires org.controlsfx.controls;
    requires com.dlsc.formsfx;
    requires net.synedra.validatorfx;
    requires org.kordamp.ikonli.javafx;
    requires org.kordamp.bootstrapfx.core;
    requires eu.hansolo.tilesfx;
    requires com.almasb.fxgl.all;
    requires java.sql;

    opens com.example.pifx to javafx.fxml;
    exports com.example.pifx;
}

================
File: main/resources/com/example/pifx/hello-view.fxml
================
<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.geometry.*?>
<?import javafx.scene.control.*?>
<?import javafx.scene.layout.*?>

<VBox alignment="CENTER" prefHeight="447.0" prefWidth="944.0" spacing="20.0" stylesheets="@style.css" xmlns="http://javafx.com/javafx/17.0.12" xmlns:fx="http://javafx.com/fxml/1" fx:controller="com.example.pifx.HelloController">

    <padding>
        <Insets bottom="20" left="20" right="20" top="20" />
    </padding>

    <!-- Welcome Header -->
    <Label fx:id="welcomeText" style="-fx-font-size: 18px; -fx-font-weight: bold;" text="Welcome! Please Log In" />

    <!-- Login Form -->
    <GridPane alignment="CENTER" hgap="10" vgap="10">
        <padding>
            <Insets bottom="10" top="10" />
        </padding>

        <!-- Define columns -->
        <columnConstraints>
            <ColumnConstraints halignment="RIGHT" minWidth="100" />
            <ColumnConstraints halignment="LEFT" hgrow="ALWAYS" />
        </columnConstraints>

        <!-- Username Row -->
        <Label text="Username:" GridPane.columnIndex="0" GridPane.rowIndex="0" />
        <TextField fx:id="name" promptText="Enter your username" GridPane.columnIndex="1" GridPane.rowIndex="0" />

        <!-- Password Row -->
        <Label text="Password:" GridPane.columnIndex="0" GridPane.rowIndex="1" />
        <PasswordField fx:id="pass" promptText="Enter your password" GridPane.columnIndex="1" GridPane.rowIndex="1" />

        <!-- Login Button -->
        <Button fx:id="login" contentDisplay="CENTER" onAction="#onLoginButtonClick" prefHeight="40.0" prefWidth="385.0" text="Login" GridPane.columnIndex="1" GridPane.hgrow="ALWAYS" GridPane.rowIndex="2" />

        <rowConstraints>
            <RowConstraints minHeight="30" />
            <RowConstraints minHeight="30" />
            <RowConstraints minHeight="40" />
        </rowConstraints>
    </GridPane>
</VBox>

================
File: main/resources/com/example/pifx/just_view.fxml
================
<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.geometry.Insets?>
<?import javafx.scene.control.*?>
<?import javafx.scene.layout.*?>
<?import javafx.scene.text.*?>
<?import javafx.scene.text.Font?>

<AnchorPane xmlns="http://javafx.com/javafx/17" xmlns:fx="http://javafx.com/fxml/1"
            fx:controller="com.example.pifx.JustView"
            prefHeight="600.0" prefWidth="800.0"
            style="-fx-background-color: #f5f5f5;">

    <VBox spacing="20.0">


        <!-- Header -->
        <HBox alignment="CENTER">
            <Text text="User Management System">
                <font>
                    <Font size="24.0"/>
                </font>
            </Text>
        </HBox>

        <!-- Search Section -->
        <HBox spacing="10.0" alignment="CENTER_LEFT">
            <TextField fx:id="searchField" promptText="Search users..." prefWidth="200.0"/>
            <Button text="Search" onAction="#handleSearch"
                    style="-fx-background-color: #2196F3; -fx-text-fill: white;"/>
        </HBox>

        <!-- Table View -->
        <TableView fx:id="userTable">
            <VBox.vgrow>ALWAYS</VBox.vgrow>
            <columns>
                <TableColumn fx:id="idColumn" prefWidth="50.0" text="ID" />
                <TableColumn fx:id="nameColumn" prefWidth="200.0" text="Full Name" />
                <TableColumn fx:id="emailColumn" prefWidth="250.0" text="Email" />
                <TableColumn fx:id="roleColumn" prefWidth="150.0" text="Role" />
                <TableColumn fx:id="statusColumn" prefWidth="100.0" text="Status" />
            </columns>
        </TableView>

        <!-- Form Section -->
        <GridPane hgap="10.0" vgap="10.0">
            <padding>
                <Insets bottom="10.0" top="10.0"/>
            </padding>

            <Label text="Full Name:" GridPane.columnIndex="0" GridPane.rowIndex="0"/>
            <TextField fx:id="nameField" promptText="Enter full name" GridPane.columnIndex="1" GridPane.rowIndex="0"/>

            <Label text="Email:" GridPane.columnIndex="0" GridPane.rowIndex="1"/>
            <TextField fx:id="emailField" promptText="Enter email" GridPane.columnIndex="1" GridPane.rowIndex="1"/>

            <Label text="Role:" GridPane.columnIndex="0" GridPane.rowIndex="2"/>
            <ComboBox fx:id="roleComboBox" prefWidth="200.0" GridPane.columnIndex="1" GridPane.rowIndex="2"/>

            <Label text="Status:" GridPane.columnIndex="0" GridPane.rowIndex="3"/>
            <ComboBox fx:id="statusComboBox" prefWidth="200.0" GridPane.columnIndex="1" GridPane.rowIndex="3"/>
        </GridPane>

        <!-- Buttons Section -->
        <HBox spacing="10.0" alignment="CENTER">
            <Button fx:id="addButton" prefWidth="120.0" style="-fx-background-color: #4CAF50; -fx-text-fill: white;" text="Add User" />
            <Button fx:id="updateButton" prefWidth="120.0" style="-fx-background-color: #FFA726; -fx-text-fill: white;" text="Update User" />
            <Button fx:id="deleteButton" prefWidth="120.0" style="-fx-background-color: #EF5350; -fx-text-fill: white;" text="Delete User" />
            <Button fx:id="clearButton" prefWidth="120.0" style="-fx-background-color: #78909C; -fx-text-fill: white;" text="Clear Form" />

        </HBox>

        <!-- Status Message -->
        <HBox alignment="CENTER" maxWidth="Infinity">
            <Label fx:id="statusLabel" maxWidth="Infinity" style="-fx-background-color: #E3F2FD; -fx-background-radius: 5; -fx-padding: 5px;" HBox.hgrow="ALWAYS"/>
        </HBox>
    </VBox>
</AnchorPane>

================
File: main/resources/com/example/pifx/register.fxml
================
<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.geometry.*?>
<?import javafx.scene.control.*?>
<?import javafx.scene.layout.*?>

<VBox alignment="CENTER" prefHeight="500.0" prefWidth="500.0" spacing="20.0"
      xmlns="http://javafx.com/javafx/17.0.12" xmlns:fx="http://javafx.com/fxml/1"
      fx:controller="com.example.pifx.RegisterController">

    <padding>
        <Insets bottom="20" left="20" right="20" top="20" />
    </padding>

    <!-- Header Label -->
    <Label text="User Registration" style="-fx-font-size: 20px; -fx-font-weight: bold;" />

    <!-- Registration Form -->
    <GridPane alignment="CENTER" hgap="10" vgap="10">
        <padding>
            <Insets top="10" bottom="10" />
        </padding>

        <!-- Column Constraints -->
        <columnConstraints>
            <ColumnConstraints halignment="RIGHT" minWidth="120" />
            <ColumnConstraints halignment="LEFT" hgrow="ALWAYS" />
        </columnConstraints>

        <!-- First Name -->
        <Label text="First Name:" GridPane.columnIndex="0" GridPane.rowIndex="0" />
        <TextField fx:id="firstName" promptText="Enter your first name" GridPane.columnIndex="1" GridPane.rowIndex="0" />

        <!-- Last Name -->
        <Label text="Last Name:" GridPane.columnIndex="0" GridPane.rowIndex="1" />
        <TextField fx:id="lastName" promptText="Enter your last name" GridPane.columnIndex="1" GridPane.rowIndex="1" />

        <!-- Age -->
        <Label text="Age:" GridPane.columnIndex="0" GridPane.rowIndex="2" />
        <TextField fx:id="age" promptText="Enter your age" GridPane.columnIndex="1" GridPane.rowIndex="2" />

        <!-- Phone Number -->
        <Label text="Phone Number:" GridPane.columnIndex="0" GridPane.rowIndex="3" />
        <TextField fx:id="phoneNumber" promptText="Enter your phone number" GridPane.columnIndex="1" GridPane.rowIndex="3" />

        <!-- Email -->
        <Label text="Email:" GridPane.columnIndex="0" GridPane.rowIndex="4" />
        <TextField fx:id="email" promptText="Enter your email" GridPane.columnIndex="1" GridPane.rowIndex="4" />

        <!-- Password -->
        <Label text="Password:" GridPane.columnIndex="0" GridPane.rowIndex="5" />
        <PasswordField fx:id="password" promptText="Enter your password" GridPane.columnIndex="1" GridPane.rowIndex="5" />

        <!-- Register Button -->
        <Button fx:id="registerButton" onAction="#onRegisterButtonClick" text="Register" GridPane.columnIndex="1" GridPane.rowIndex="6" maxWidth="Infinity"/>
        <Button text="View Users" onAction="#onViewUsersClick" GridPane.columnIndex="1" GridPane.rowIndex="7"/>

        <rowConstraints>
            <RowConstraints minHeight="30" />
            <RowConstraints minHeight="30" />
            <RowConstraints minHeight="30" />
            <RowConstraints minHeight="30" />
            <RowConstraints minHeight="30" />
            <RowConstraints minHeight="30" />
            <RowConstraints minHeight="40" />
        </rowConstraints>
    </GridPane>

</VBox>

================
File: main/resources/com/example/pifx/users-view.fxml
================
<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.scene.control.*?>
<?import javafx.scene.layout.*?>

<VBox alignment="CENTER" spacing="10.0" xmlns="http://javafx.com/javafx/17.0.12" xmlns:fx="http://javafx.com/fxml/1" fx:controller="com.example.pifx.UsersController">

    <TableView fx:id="usersTable" prefWidth="500.0">
        <columns>
            <TableColumn fx:id="idColumn" prefWidth="50.0" text="ID" />
            <TableColumn fx:id="firstNameColumn" prefWidth="100.0" text="First Name" />
            <TableColumn fx:id="lastNameColumn" prefWidth="100.0" text="Last Name" />
            <TableColumn fx:id="ageColumn" prefWidth="50.0" text="Age" />
            <TableColumn fx:id="phoneColumn" prefWidth="100.0" text="Phone" />
            <TableColumn fx:id="emailColumn" prefWidth="150.0" text="Email" />
        </columns>
    </TableView>

    <Button onAction="#onBackButtonClick" text="Back" />
</VBox>



================================================================
End of Codebase
================================================================
